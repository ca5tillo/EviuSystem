/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista.abrirProyecto;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import controlador.modelos.Categoria;
import controlador.modelosRespuestas.Obj_respuestas;
import controlador.modelosRespuestas.Perfil;
import controlador.modelosRespuestas.Respuestas;
import controlador.reporteRapido.Reporte;
import java.awt.Font;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

public final class JP_proyectoAbierto extends javax.swing.JPanel {

    vista.Eviu Eviu;
    JP_iconoTest JP_iconoTest;
    String str_nomProyecto;
    String str_nomTest;

    public JP_proyectoAbierto(String nombreProyecto, vista.Eviu Eviu) {
        str_nomProyecto = nombreProyecto;
        initComponents();
        this.Eviu = Eviu;
        this.setSize(900, 577);
        font();
        seticonoTest();
        jl_nVersion.setText("" + controlador.LeerDatos.getVersion(str_nomProyecto));
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jmiPop_eliminarProyecto = new javax.swing.JMenuItem();
        jProgressBar1 = new javax.swing.JProgressBar();
        jl_nomProyecto = new javax.swing.JLabel();
        jl_subtitulo = new javax.swing.JLabel();
        jb_abrir = new javax.swing.JButton();
        jb_cancelar = new javax.swing.JButton();
        jb_nuevoTest = new javax.swing.JButton();
        jb_verAvances = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jb_nuevaVersion = new javax.swing.JButton();
        jl_nVersion = new javax.swing.JLabel();
        jb_crearReporte = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jp_contenedor = new javax.swing.JPanel();
        jb_eliminarProyecto = new javax.swing.JButton();
        jb_reporteRapido = new javax.swing.JButton();

        jmiPop_eliminarProyecto.setText("Eliminar Proyecto");
        jmiPop_eliminarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiPop_eliminarProyectoActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jmiPop_eliminarProyecto);

        jl_nomProyecto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_nomProyecto.setText("Proyecto: "+str_nomProyecto);

        jl_subtitulo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_subtitulo.setText("Tienes los siguientes Tests en este Proyecto.");

        jb_abrir.setText("Abrir");
        jb_abrir.setEnabled(false);
        jb_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_abrirActionPerformed(evt);
            }
        });

        jb_cancelar.setText("Cancelar");
        jb_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_cancelarActionPerformed(evt);
            }
        });

        jb_nuevoTest.setText("Nuevo Test");
        jb_nuevoTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_nuevoTestActionPerformed(evt);
            }
        });

        jb_verAvances.setText("Ver Avances");
        jb_verAvances.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_verAvancesActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Versi√≥n de tu proyecto");

        jb_nuevaVersion.setText("Nueva Version");
        jb_nuevaVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_nuevaVersionActionPerformed(evt);
            }
        });

        jl_nVersion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_nVersion.setText("n");

        jb_crearReporte.setText("Crear Reporte");
        jb_crearReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_crearReporteActionPerformed(evt);
            }
        });

        jPanel1.setPreferredSize(new java.awt.Dimension(600, 24));

        jp_contenedor.setComponentPopupMenu(jPopupMenu1);
        java.awt.FlowLayout flowLayout2 = new java.awt.FlowLayout(java.awt.FlowLayout.LEADING);
        flowLayout2.setAlignOnBaseline(true);
        jp_contenedor.setLayout(flowLayout2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp_contenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jp_contenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        jb_eliminarProyecto.setText("Eliminar Proyecto");
        jb_eliminarProyecto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_eliminarProyectoActionPerformed(evt);
            }
        });

        jb_reporteRapido.setText("Reporte Rapido");
        jb_reporteRapido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_reporteRapidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(jl_nVersion, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jb_nuevoTest, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                .addComponent(jb_verAvances, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                .addComponent(jb_crearReporte, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                .addComponent(jb_reporteRapido, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jb_nuevaVersion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jb_eliminarProyecto, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(184, 184, 184)
                                .addComponent(jb_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jb_abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jl_nomProyecto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jl_subtitulo, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jl_nomProyecto)
                .addGap(18, 18, 18)
                .addComponent(jl_subtitulo)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jb_nuevoTest)
                        .addGap(18, 18, 18)
                        .addComponent(jb_verAvances)
                        .addGap(18, 18, 18)
                        .addComponent(jb_crearReporte)
                        .addGap(18, 18, 18)
                        .addComponent(jb_reporteRapido)
                        .addGap(75, 75, 75)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jl_nVersion)
                        .addGap(18, 18, 18)
                        .addComponent(jb_nuevaVersion))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jb_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jb_abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(55, 55, 55))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jb_eliminarProyecto)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jb_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_cancelarActionPerformed
        Eviu.pintarPanelInicio();
    }//GEN-LAST:event_jb_cancelarActionPerformed

    private void jb_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_abrirActionPerformed

        vista.perfil.JD_perfil.main(Eviu, str_nomProyecto);
        Eviu.pintarPanel_test(str_nomProyecto, str_nomTest);
    }//GEN-LAST:event_jb_abrirActionPerformed

    private void jb_crearReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_crearReporteActionPerformed
        /*
         Codigo de Rafa
         */
        javax.swing.JOptionPane.showMessageDialog(null,"Seccion en Construccion");
    }//GEN-LAST:event_jb_crearReporteActionPerformed

    private void jb_verAvancesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_verAvancesActionPerformed
        /*
         Codigo de Dani
         */
        javax.swing.JOptionPane.showMessageDialog(null,"Seccion en Construccion");
    }//GEN-LAST:event_jb_verAvancesActionPerformed
    
    private void crearreporte(){
        try{
        Document documento = new Document();

        FileOutputStream ficheroPdf = new FileOutputStream("fichero.pdf");

        PdfWriter.getInstance(documento, ficheroPdf).setInitialLeading(20);

// Se abre el documento.
        documento.open();
        documento.add(new Paragraph("Reporte del Proyecto "+str_nomProyecto,
                FontFactory.getFont("arial", // fuente
                        26, // tama√±o
                        Font.BOLD, // estilo
                        BaseColor.BLACK)));  
        documento.add(new Paragraph("\n\nDescripci√≥n:"));
        documento.add(new Paragraph(""+controlador.LeerDatos.getDescripcionProyecto(str_nomProyecto)));
        documento.add(new Paragraph("\n\n"));
        documento.add(new Paragraph("Este proyecto con tiene los siguientes Test:\n"));
        String Tests="";
        
        java.util.ArrayList<String> lst_Tests = controlador.Archivos.getTests(str_nomProyecto);
        for (String test : lst_Tests) {
            int numRegistros=0;
            ArrayList<Obj_respuestas> getRespuestas
                = controlador.LeerDatos.getRespuestas(str_nomProyecto, test);
            for (Obj_respuestas obj_respuestas : getRespuestas) {
                java.util.ArrayList<controlador.modelosRespuestas.Respuestas> 
                    respuestas = obj_respuestas.getRespuestas();
                numRegistros=respuestas.size();
            }
            Tests += "* "+test+"  (Se realizo "+numRegistros+" veces)\n";
            
        }
        
        documento.add(new Paragraph(Tests));
        documento.add(new Paragraph("\n\n"));
        documento.add(new Paragraph("Este proyecto tine definido el siguiente Opcion de Perfil\n\n"));
        
        /*CREO LA BASE DE LA GRAFICA*/
        String pdf_perfil= "";
        java.util.ArrayList<controlador.modelos.Categoria> perfil = new java.util.ArrayList();
        perfil = controlador.LeerDatos.getPerfil(str_nomProyecto);
        for (Categoria cat : perfil) {
            String pdf_categoria = cat.getCategoria();
            java.util.ArrayList<String> opciones = cat.getOpciones();
            String pdf_opciones="";
            for (String opcion : opciones) {
                pdf_opciones += "\t* "+opcion+"\n";
            }
            pdf_perfil+=pdf_categoria+"\n"+pdf_opciones+"\n";
        }
        documento.add(new Paragraph(pdf_perfil));
        
        /* FIN DE CREO LA BASE DE LA GRAFICA*/
        documento.add(new Paragraph("\n\n\nPrueba de insertar grafica de perfil se tuvo que haver seleccinado un test "));
        documento.add(new Paragraph("\n"));
        
        String path = grafia();
        try {
            
            Image foto = Image.getInstance(path);
            foto.scaleToFit(100, 100);
            foto.setAlignment(Chunk.ALIGN_MIDDLE);
            documento.add(foto);
            
            
        } catch (DocumentException | IOException e) {
        }
        
        documento.add(new Paragraph("hola parrafo de prueba "));
        
        documento.close();
        //eliminar la imagen
            java.io.File fichero = new java.io.File(path);
            fichero.delete();
        }catch(FileNotFoundException | DocumentException e){
            System.out.println("error al crear reporte ");
        }
    }
    
    private void respuestas() {
        ArrayList<Obj_respuestas> getRespuestas
                = controlador.LeerDatos.getRespuestas(str_nomProyecto, str_nomTest);
        String ss = "";
        for (Obj_respuestas a : getRespuestas) {
            String ID = a.getID();
            String version = a.getVersion();
            String tiempodeencuesta = a.getTiempodeencuesta();
            ss += "\nID: " + ID;
            ss += "\n\t version: " + version;
            ss += "\n\t tiempodeencuesta: " + tiempodeencuesta;
            java.util.ArrayList<controlador.modelosRespuestas.Perfil> perfil = a.getPerfil();

            java.util.ArrayList<controlador.modelosRespuestas.Respuestas> 
                    respuestas = a.getRespuestas();
            ss += "\n\t\t-----PERFIL-----";
            for (Perfil perfil1 : perfil) {
                String categoria = perfil1.getCategoria();
                String opcion = perfil1.getOpcion();

                ss += "\n\t\t\t" + opcion;
            }
            ss += "\n\t\t-----RESPUESTAS-----";
            for (Respuestas respuestas1 : respuestas) {
                String id_pregunta = respuestas1.getId_pregunta();
                String pregunta = respuestas1.getPregunta();
                String realizo = respuestas1.getRealizo();
                String tiempo = respuestas1.getTiempo();
                String animo = respuestas1.getAnimo();
                String nota = respuestas1.getNota();

                ss += "\n\t\t\tpregunta: " + pregunta;
                ss += "\n\t\t\t\trealizo: " + realizo;
                ss += "\n\t\t\t\ttiempo: " + tiempo;
                ss += "\n\t\t\t\tanimo: " + animo;
                ss += "\n\t\t\t\tnota: " + nota;
            }
        }
        controlador.Archivos.reporte(ss);
    }

    private String grafia() {
        String path = "ImagenGuardada.jpg";
        JFreeChart Grafica;
        DefaultCategoryDataset Datos = new DefaultCategoryDataset();

        /*CREO LA BASE DE LA GRAFICA*/
        java.util.ArrayList<controlador.modelos.Categoria> perfil = new java.util.ArrayList();
        perfil = controlador.LeerDatos.getPerfil(str_nomProyecto);
        for (Categoria cat : perfil) {
            String categoria = cat.getCategoria();
            java.util.ArrayList<String> opciones = cat.getOpciones();
            for (String opcion : opciones) {
                Datos.addValue(0, categoria, opcion);
            }
        }
        /* FIN DE CREO LA BASE DE LA GRAFICA*/

        /* INCREMENTO LOS VALORES */
        /*TIENES QUE SELECCINAR UN TEST PARA QUE str_nomTest TENGA UN VALOR */
        ArrayList<Obj_respuestas> getRespuestas
                = controlador.LeerDatos.getRespuestas(str_nomProyecto, str_nomTest);
        for (Obj_respuestas a : getRespuestas) {

            java.util.ArrayList<controlador.modelosRespuestas.Perfil> lst_perfil = a.getPerfil();

            for (Perfil perfil1 : lst_perfil) {
                String categoria = perfil1.getCategoria();
                String opcion = perfil1.getOpcion();

                Datos.incrementValue(1, categoria, opcion);
            }
        }

        Grafica = ChartFactory.createBarChart("Grafica del Perfiles",
                "Opciones", "N√∫mero", Datos,
                PlotOrientation.VERTICAL, true, true, false);

        ChartPanel Panel = new ChartPanel(Grafica);
//        JFrame Ventana = new JFrame("JFreeChart");
//        Ventana.getContentPane().add(Panel);
//        Ventana.pack();
//        Ventana.setVisible(true);
//        Ventana.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        try {
            org.jfree.chart.ChartUtilities.saveChartAsJPEG(new java.io.File(path), Grafica, 500, 500);
        } catch (java.io.IOException ex) {
            javax.swing.JOptionPane.showMessageDialog(this, "Se ha producido un error al intentar guardar", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        return path;
    }

    private void pdf() throws FileNotFoundException, DocumentException {
        Document documento = new Document();

// Se crea el OutputStream para el fichero donde queremos dejar el pdf.
        FileOutputStream ficheroPdf = new FileOutputStream("fichero.pdf");

// Se asocia el documento al OutputStream y se indica que el espaciado entre
// lineas sera de 20. Esta llamada debe hacerse antes de abrir el documento
        PdfWriter.getInstance(documento, ficheroPdf).setInitialLeading(20);

// Se abre el documento.
        documento.open();

        documento.add(new Paragraph("Esto es el primer p√°rrafo, normalito"));

        documento.add(new Paragraph("Este es el segundo y tiene una fuente rara",
                FontFactory.getFont("arial", // fuente
                        22, // tama√±o
                        Font.ITALIC, // estilo
                        BaseColor.CYAN)));             // color

        try {
            Image foto = Image.getInstance("ImagenGuardada.jpg");
            foto.scaleToFit(500, 500);
            foto.setAlignment(Chunk.ALIGN_MIDDLE);
            documento.add(foto);
        } catch (DocumentException | IOException e) {
        }

        PdfPTable tabla = new PdfPTable(3);
        for (int i = 0; i < 15; i++) {
            tabla.addCell("celda " + i);
        }
        documento.add(tabla);
        documento.close();
    }

    private void jb_nuevoTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_nuevoTestActionPerformed

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                final vista.crearProyecto.JD_crearPT dialog = new vista.crearProyecto.JD_crearPT(
                        new javax.swing.JFrame(), true, str_nomProyecto);

                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        dialog.dispose();

                    }
                });

                dialog.setVisible(true);
                seticonoTest();
                jp_contenedor.updateUI();
            }
        });

    }//GEN-LAST:event_jb_nuevoTestActionPerformed

    private void jb_nuevaVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_nuevaVersionActionPerformed
        controlador.LeerDatos.setVersion(str_nomProyecto);
        jl_nVersion.setText("" + controlador.LeerDatos.getVersion(str_nomProyecto));
    }//GEN-LAST:event_jb_nuevaVersionActionPerformed

    private void jb_eliminarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_eliminarProyectoActionPerformed
        eliminarProyecto();
    }//GEN-LAST:event_jb_eliminarProyectoActionPerformed

    private void jmiPop_eliminarProyectoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiPop_eliminarProyectoActionPerformed
        eliminarProyecto();
    }//GEN-LAST:event_jmiPop_eliminarProyectoActionPerformed

    private void jb_reporteRapidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_reporteRapidoActionPerformed
        class Filtro extends javax.swing.filechooser.FileFilter {

            @Override
            public boolean accept(java.io.File f) {
                if (f.isDirectory()) {
                    return true;
                }
                String s = f.getName();
                int i = s.lastIndexOf('.');

                if (i > 0 && i < s.length() - 1) {
                    if (s.substring(i + 1).toLowerCase().equalsIgnoreCase("pdf")) {
                        return true;
                    }
                }

                return false;
            }

            @Override
            public String getDescription() {
                return "Guardar en pdf";
            }
        }
        
        javax.swing.JFileChooser selector = new javax.swing.JFileChooser(".");
        selector.setAcceptAllFileFilterUsed(false);//que en opciones, no apraresca todos los archivos
        selector.setFileFilter(new Filtro());
        
        int value = selector.showSaveDialog(null);
        if (value == JFileChooser.APPROVE_OPTION) {
            java.io.File archivoSeleccionado = selector.getSelectedFile();
            String nombre = archivoSeleccionado.getName();
            String direccion = archivoSeleccionado.getParent();
//            System.out.println(direccion );
            Reporte reporte = new controlador.reporteRapido.Reporte(
                    Eviu,str_nomProyecto,nombre,direccion);
        }
    }//GEN-LAST:event_jb_reporteRapidoActionPerformed

    public void eliminarProyecto() {
        Object[] opciones = {"Aceptar", "Cancelar"};
        int eleccion = javax.swing.JOptionPane.showOptionDialog(this,
                "Esta seguro de Eliminar el Proyecto " + str_nomProyecto,
                "Mensaje de confirmacion",
                javax.swing.JOptionPane.YES_NO_OPTION,
                javax.swing.JOptionPane.QUESTION_MESSAGE, null, opciones, "Aceptar");
        if (eleccion == javax.swing.JOptionPane.YES_OPTION) {
            boolean eliminar = controlador.Archivos.eliminarProyecto(str_nomProyecto);
            if (eliminar) {
                javax.swing.JOptionPane.showMessageDialog(null,
                        "El Proyecto ha sido Eliminado satisfactoriamente");
                Eviu.pintarPanelInicio();
            } else {
                javax.swing.JOptionPane.showMessageDialog(null,
                        "No se pudo Eliminar el Proyecto ");
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_abrir;
    private javax.swing.JButton jb_cancelar;
    private javax.swing.JButton jb_crearReporte;
    private javax.swing.JButton jb_eliminarProyecto;
    private javax.swing.JButton jb_nuevaVersion;
    private javax.swing.JButton jb_nuevoTest;
    private javax.swing.JButton jb_reporteRapido;
    private javax.swing.JButton jb_verAvances;
    private javax.swing.JLabel jl_nVersion;
    private javax.swing.JLabel jl_nomProyecto;
    private javax.swing.JLabel jl_subtitulo;
    private javax.swing.JMenuItem jmiPop_eliminarProyecto;
    private javax.swing.JPanel jp_contenedor;
    // End of variables declaration//GEN-END:variables
    private void font() {
        jl_subtitulo.setFont(vista.Config.getTam_subTitulo());
        jl_nomProyecto.setFont(vista.Config.getTam_Titulo());
    }

    public void seticonoTest() {
        jp_contenedor.removeAll();
        jp_contenedor.updateUI();
        java.util.ArrayList<String> lst_Tests = controlador.Archivos.getTests(str_nomProyecto);
        for (String test : lst_Tests) {
            jp_contenedor.add(new JP_iconoTest(test, this));
        }

    }

    public JP_iconoTest getJP_iconoTest() {
        return JP_iconoTest;
    }

    public void setJP_iconoTest(JP_iconoTest JP_iconoTest) {
        this.JP_iconoTest = JP_iconoTest;
    }

    public String getStr_nomTest() {
        return str_nomTest;
    }

    public void setStr_nomTest(String str_nomTest) {
        this.str_nomTest = str_nomTest;
    }

    public void activarBotonAbrir() {
        jb_abrir.setEnabled(true);
    }

    public String getStr_nomProyecto() {
        return str_nomProyecto;
    }

    public static void main(String[] args) throws FileNotFoundException, DocumentException {
        JP_proyectoAbierto a = new JP_proyectoAbierto("", null);
        a.pdf();
    }

}
